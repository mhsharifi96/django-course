"""
Django settings for djangoLogging project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5s4e+&=sn(+r_*!gnczcs(_tn57lfy1)qe^5rzlu5q3ml^=9@o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'firstAPI',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoLogging.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoLogging.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

import os

# LOGGING ={
#     'version':1,
#     'loggers':{
#         'django':{
#             'handlers':['file','file2'],
#             'level':'DEBUG'
#         }
#     },
#     'handlers':{
#         'file':{
#             'level':'INFO',
#             'class': 'logging.FileHandler',
#             'filename':'./logs/debug5.log',
#             'formatter':'simpleRe',
#         },
#         'file2':{
#             'level':'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename':'./logs/debug6.log',
#             'formatter':'simpleRe',
#         }
#     },
#     'formatters':{
#         'simpleRe': {
#             'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#             'style': '{',
#         }

#     }
# }





# LOGGING={
#     'version':1,
#     'disable_existing_loggers':False,
#      'loggers':{
#         'django':{
#             'handlers':['file','console'],
#             'level':'DEBUG',
#             'propogate':'True',
#         },
#     },
#     'handlers':{
#         'file':{
#             'level':'INFO',
#             'class':'logging.FileHandler',
#             'filename':'./logs/debug2.log',
#             'formatter':'someFormat',
#         },
#         'console':{
#             'level':'INFO',
#             'class':'logging.StreamHandler',
#         }
#     },
   
#     'formatters':{
#         'someFormat':{
#             'format': '{levelname} {message}',
#             'style': '{',
#         }
#     },
# }





# from datetime import datetime
# today = datetime.today().strftime('%Y-%m-%d')
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'file': {
#             'level':'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename':'./logs/log_'+today+'.log',
#             'formatter': 'verbose'
#         },
#         'file_request': {
#             'level':'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename':'./logs/request_log.log',
#             'formatter': 'verbose'
#         },
#         'file_server': {
#             'level':'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename':'./logs/server_log.log',
#             'formatter': 'verbose' #simple ? :)
#         },
#     },
#     'loggers':{
#         'django':{
#             'handlers':['file'],
#             'level':'DEBUG',
#             'propogate':True,
#                 },
#         'django.request': {
#             'handlers': ['file_request'],
#             'level': 'INFO',
#             'propagate': False,
#         },
#         'django.server': {
#             'handlers': ['file_server'],
#             'level': 'INFO',
#             'propagate': False,
#         },
#     },
#     'formatters': {
#         'verbose': {
#             'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {message}',
#             'style': '{',
#         },
#     }
# }



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level':'INFO',
            'class': 'logging.StreamHandler',
        },
        'file':{
            'level':'INFO',
            'class': 'logging.FileHandler',
            'filename':'./logs/debug_maktab.log'
        }
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            # 'handlers': ['console'],
            'handlers':['file'],
            'level':'DEBUG',
            'propogate':True,
            
            # 'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            # 'propagate': False,

        },
    },
}


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'root': {
#         'handlers': ['console'],
#         'level': 'WARNING',
#     },
# }

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'root': {
#         'handlers': ['console'],
#         'level': 'WARNING',
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'INFO',
#             'propagate': False,
#         },
#     },
# }




# what is style ?
# https://docs.djangoproject.com/en/dev/howto/logging/

# what is propogate,
#https://www.toptal.com/python/in-depth-python-logging#:~:text=Python%20Logger&text=Propagate%3A%20Decides%20whether%20a%20log,out%20%E2%80%9Cless%20important%E2%80%9D%20logs.&text=Handlers%3A%20The%20list%20of%20handlers,it%20arrives%20to%20a%20logger.